# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-ip6 3
set%d test-ip6 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
ip6 test-ip6 input 
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-inet 3
set%d test-inet 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
inet test-inet input 
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-netdev 3
set%d test-netdev 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
netdev test-netdev ingress 
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-ip4 3
set%d test-ip4 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
ip test-ip4 input 
  [ payload load 1b @ network header + 9 => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-netdev 3
set%d test-netdev 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
netdev test-netdev ingress 
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-ip4 3
set%d test-ip4 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
ip test-ip4 input 
  [ payload load 1b @ network header + 9 => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-ip4 3
set%d test-ip4 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
ip test-ip4 input 
  [ payload load 1b @ network header + 9 => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
set%d test-ip4 3
set%d test-ip4 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
ip test-ip4 input 
  [ payload load 1b @ network header + 9 => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = (reg=1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set set%d ]

