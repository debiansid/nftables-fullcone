# sctp sport 23
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp eq reg 1 0x00001700 ]

# sctp sport != 23
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp neq reg 1 0x00001700 ]

# sctp sport 23-44
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp gte reg 1 0x00001700 ]
  [ cmp lte reg 1 0x00002c00 ]

# sctp sport != 23-44
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ range neq reg 1 0x00001700 0x00002c00 ]

# sctp sport { 23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# sctp sport != { 23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# sctp dport 23
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp eq reg 1 0x00001700 ]

# sctp dport != 23
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp neq reg 1 0x00001700 ]

# sctp dport 23-44
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp gte reg 1 0x00001700 ]
  [ cmp lte reg 1 0x00002c00 ]

# sctp dport != 23-44
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ range neq reg 1 0x00001700 0x00002c00 ]

# sctp dport { 23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# sctp dport != { 23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# sctp checksum 1111
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ cmp eq reg 1 0x57040000 ]

# sctp checksum != 11
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ cmp neq reg 1 0x0b000000 ]

# sctp checksum 21-333
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ cmp gte reg 1 0x15000000 ]
  [ cmp lte reg 1 0x4d010000 ]

# sctp checksum != 32-111
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ range neq reg 1 0x20000000 0x6f000000 ]

# sctp checksum { 22, 33, 44}
__set%d test-inet 3
__set%d test-inet 0
	element 16000000  : 0 [end]	element 21000000  : 0 [end]	element 2c000000  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# sctp checksum != { 22, 33, 44}
__set%d test-inet 3
__set%d test-inet 0
	element 16000000  : 0 [end]	element 21000000  : 0 [end]	element 2c000000  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 8 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# sctp vtag 22
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ cmp eq reg 1 0x16000000 ]

# sctp vtag != 233
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ cmp neq reg 1 0xe9000000 ]

# sctp vtag 33-45
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ cmp gte reg 1 0x21000000 ]
  [ cmp lte reg 1 0x2d000000 ]

# sctp vtag != 33-45
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ range neq reg 1 0x21000000 0x2d000000 ]

# sctp vtag {33, 55, 67, 88}
__set%d test-inet 3
__set%d test-inet 0
	element 21000000  : 0 [end]	element 37000000  : 0 [end]	element 43000000  : 0 [end]	element 58000000  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# sctp vtag != {33, 55, 67, 88}
__set%d test-inet 3
__set%d test-inet 0
	element 21000000  : 0 [end]	element 37000000  : 0 [end]	element 43000000  : 0 [end]	element 58000000  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000084 ]
  [ payload load 4b @ transport header + 4 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# sctp chunk data exists
ip
  [ exthdr load 1b @ 0 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk init exists
ip
  [ exthdr load 1b @ 1 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk init-ack exists
ip
  [ exthdr load 1b @ 2 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk sack exists
ip
  [ exthdr load 1b @ 3 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk heartbeat exists
ip
  [ exthdr load 1b @ 4 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk heartbeat-ack exists
ip
  [ exthdr load 1b @ 5 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk abort exists
ip
  [ exthdr load 1b @ 6 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk shutdown exists
ip
  [ exthdr load 1b @ 7 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk shutdown-ack exists
ip
  [ exthdr load 1b @ 8 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk error exists
ip
  [ exthdr load 1b @ 9 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk cookie-echo exists
ip
  [ exthdr load 1b @ 10 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk cookie-ack exists
ip
  [ exthdr load 1b @ 11 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk ecne exists
ip
  [ exthdr load 1b @ 12 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk cwr exists
ip
  [ exthdr load 1b @ 13 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk shutdown-complete exists
ip
  [ exthdr load 1b @ 14 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk asconf-ack exists
ip
  [ exthdr load 1b @ 128 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk forward-tsn exists
ip
  [ exthdr load 1b @ 192 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk asconf exists
ip
  [ exthdr load 1b @ 193 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# sctp chunk data type 0
ip
  [ exthdr load 1b @ 0 + 0 => reg 1 ]
  [ cmp eq reg 1 0x00000000 ]

# sctp chunk init flags 23
ip
  [ exthdr load 1b @ 1 + 1 => reg 1 ]
  [ cmp eq reg 1 0x00000017 ]

# sctp chunk init-ack length 42
ip
  [ exthdr load 2b @ 2 + 2 => reg 1 ]
  [ cmp eq reg 1 0x00002a00 ]

# sctp chunk data stream 1337
ip
  [ exthdr load 2b @ 0 + 8 => reg 1 ]
  [ cmp eq reg 1 0x00003905 ]

# sctp chunk init initial-tsn 5
ip
  [ exthdr load 4b @ 1 + 16 => reg 1 ]
  [ cmp eq reg 1 0x05000000 ]

# sctp chunk init-ack num-outbound-streams 3
ip
  [ exthdr load 2b @ 2 + 12 => reg 1 ]
  [ cmp eq reg 1 0x00000300 ]

# sctp chunk sack a-rwnd 1
ip
  [ exthdr load 4b @ 3 + 8 => reg 1 ]
  [ cmp eq reg 1 0x01000000 ]

# sctp chunk shutdown cum-tsn-ack 65535
ip
  [ exthdr load 4b @ 7 + 4 => reg 1 ]
  [ cmp eq reg 1 0xffff0000 ]

# sctp chunk ecne lowest-tsn 5
ip
  [ exthdr load 4b @ 12 + 4 => reg 1 ]
  [ cmp eq reg 1 0x05000000 ]

# sctp chunk cwr lowest-tsn 8
ip
  [ exthdr load 4b @ 13 + 4 => reg 1 ]
  [ cmp eq reg 1 0x08000000 ]

# sctp chunk asconf-ack seqno 12345
ip
  [ exthdr load 4b @ 128 + 4 => reg 1 ]
  [ cmp eq reg 1 0x39300000 ]

# sctp chunk forward-tsn new-cum-tsn 31337
ip
  [ exthdr load 4b @ 192 + 4 => reg 1 ]
  [ cmp eq reg 1 0x697a0000 ]

# sctp chunk asconf seqno 12345
ip
  [ exthdr load 4b @ 193 + 4 => reg 1 ]
  [ cmp eq reg 1 0x39300000 ]

