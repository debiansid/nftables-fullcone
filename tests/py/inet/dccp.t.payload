# dccp sport 21-35
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp gte reg 1 0x00001500 ]
  [ cmp lte reg 1 0x00002300 ]

# dccp sport != 21-35
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ range neq reg 1 0x00001500 0x00002300 ]

# dccp sport {23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# dccp sport != {23, 24, 25}
__set%d test-inet 3
__set%d test-inet 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# dccp sport 20-50
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp gte reg 1 0x00001400 ]
  [ cmp lte reg 1 0x00003200 ]

# dccp dport {23, 24, 25}
__set%d test-ip4 3
__set%d test-ip4 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# dccp dport != {23, 24, 25}
__set%d test-ip4 3
__set%d test-ip4 0
	element 00001700  : 0 [end]	element 00001800  : 0 [end]	element 00001900  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d 0x1 ]

# dccp type {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
__set%d test-inet 3
__set%d test-inet 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = ( reg 1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set __set%d ]

# dccp type != {request, response, data, ack, dataack, closereq, close, reset, sync, syncack}
__set%d test-inet 3
__set%d test-inet 0
	element 00000000  : 0 [end]	element 00000002  : 0 [end]	element 00000004  : 0 [end]	element 00000006  : 0 [end]	element 00000008  : 0 [end]	element 0000000a  : 0 [end]	element 0000000c  : 0 [end]	element 0000000e  : 0 [end]	element 00000010  : 0 [end]	element 00000012  : 0 [end]
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = ( reg 1 & 0x0000001e ) ^ 0x00000000 ]
  [ lookup reg 1 set __set%d 0x1 ]

# dccp type request
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = ( reg 1 & 0x0000001e ) ^ 0x00000000 ]
  [ cmp eq reg 1 0x00000000 ]

# dccp type != request
inet test-inet input
  [ meta load l4proto => reg 1 ]
  [ cmp eq reg 1 0x00000021 ]
  [ payload load 1b @ transport header + 8 => reg 1 ]
  [ bitwise reg 1 = ( reg 1 & 0x0000001e ) ^ 0x00000000 ]
  [ cmp neq reg 1 0x00000000 ]

# dccp option 0 exists
ip test-inet input
  [ exthdr load 1b @ 0 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]

# dccp option 43 missing
ip test-inet input
  [ exthdr load 1b @ 43 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000000 ]

# dccp option 255 exists
ip test-inet input
  [ exthdr load 1b @ 255 + 0 present => reg 1 ]
  [ cmp eq reg 1 0x00000001 ]
