# dnat to numgen inc mod 2 map { 0 : 192.168.10.100, 1 : 192.168.20.200 }
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 00000001  : c814a8c0 0 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 2 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 2 map { 0 : 192.168.10.100, 1 : 192.168.20.200 }
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 00000001  : c814a8c0 0 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 2 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 10 map { 0-5 : 192.168.10.100, 6-9 : 192.168.20.200}
__map%d test-ip4 f
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 06000000  : c814a8c0 0 [end]	element 0a000000  : 1 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 10 ]
  [ byteorder reg 1 = hton(reg 1, 4, 4) ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 10 map { 0-5 : 192.168.10.100, 6-9 : 192.168.20.200}
__map%d test-ip4 f
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 06000000  : c814a8c0 0 [end]	element 0a000000  : 1 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 10 ]
  [ byteorder reg 1 = hton(reg 1, 4, 4) ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 10 map { 0-5 : 192.168.10.100, 6-9 : 192.168.20.200}
__map%d test-ip4 f
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 06000000  : c814a8c0 0 [end]	element 0a000000  : 1 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 10 ]
  [ byteorder reg 1 = hton(reg 1, 4, 4) ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 10 map { 0-5 : 192.168.10.100, 6-9 : 192.168.20.200}
__map%d test-ip4 f
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 06000000  : c814a8c0 0 [end]	element 0a000000  : 1 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 10 ]
  [ byteorder reg 1 = hton(reg 1, 4, 4) ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 2 map { 0 : 192.168.10.100, 1 : 192.168.20.200 }
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 00000001  : c814a8c0 0 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 2 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 10 map { 0-5 : 192.168.10.100, 6-9 : 192.168.20.200}
__map%d test-ip4 f
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 06000000  : c814a8c0 0 [end]	element 0a000000  : 1 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 10 ]
  [ byteorder reg 1 = hton(reg 1, 4, 4) ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

# dnat to numgen inc mod 2 map { 0 : 192.168.10.100, 1 : 192.168.20.200 }
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000000  : 640aa8c0 0 [end]	element 00000001  : c814a8c0 0 [end]
ip test-ip4 pre 
  [ numgen reg 1 = inc mod 2 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ nat dnat ip addr_min reg 1 addr_max reg 0 ]

