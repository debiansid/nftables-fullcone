# udplite sport 80 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp eq reg 1 0x00005000 ]
  [ immediate reg 0 accept ]

# udplite sport != 60 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp neq reg 1 0x00003c00 ]
  [ immediate reg 0 accept ]

# udplite sport 50-70 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp gte reg 1 0x00003200 ]
  [ cmp lte reg 1 0x00004600 ]
  [ immediate reg 0 accept ]

# udplite sport != 50-60 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ cmp lt reg 1 0x00003200 ]
  [ cmp gt reg 1 0x00003c00 ]
  [ immediate reg 0 accept ]

# udplite sport { 49, 50} drop
__set%d test-ip4 3
__set%d test-ip4 0
	element 00003100  : 0 [end]	element 00003200  : 0 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d ]
  [ immediate reg 0 drop ]

# udplite sport { 12-40}
__set%d test-ip4 7
__set%d test-ip4 0
	element 00000000  : 1 [end]	element 00000c00  : 0 [end]	element 00002900  : 1 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 0 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# udplite dport 80 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp eq reg 1 0x00005000 ]
  [ immediate reg 0 accept ]

# udplite dport != 60 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp neq reg 1 0x00003c00 ]
  [ immediate reg 0 accept ]

# udplite dport 70-75 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp gte reg 1 0x00004600 ]
  [ cmp lte reg 1 0x00004b00 ]
  [ immediate reg 0 accept ]

# udplite dport != 50-60 accept
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ cmp lt reg 1 0x00003200 ]
  [ cmp gt reg 1 0x00003c00 ]
  [ immediate reg 0 accept ]

# udplite dport { 49, 50} drop
__set%d test-ip4 3
__set%d test-ip4 0
	element 00003100  : 0 [end]	element 00003200  : 0 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d ]
  [ immediate reg 0 drop ]

# udplite dport { 70-75} accept
__set%d test-ip4 7
__set%d test-ip4 0
	element 00000000  : 1 [end]	element 00004600  : 0 [end]	element 00004c00  : 1 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 2 => reg 1 ]
  [ lookup reg 1 set __set%d ]
  [ immediate reg 0 accept ]

# udplite checksum 6666 drop
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000a1a ]
  [ immediate reg 0 drop ]

# udplite checksum 22
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00001600 ]

# udplite checksum != 233
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ cmp neq reg 1 0x0000e900 ]

# udplite checksum 33-45
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ cmp gte reg 1 0x00002100 ]
  [ cmp lte reg 1 0x00002d00 ]

# udplite checksum != 33-45
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ cmp lt reg 1 0x00002100 ]
  [ cmp gt reg 1 0x00002d00 ]

# udplite checksum { 33, 55, 67, 88}
__set%d test-ip4 3
__set%d test-ip4 0
	element 00002100  : 0 [end]	element 00003700  : 0 [end]	element 00004300  : 0 [end]	element 00005800  : 0 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ lookup reg 1 set __set%d ]

# udplite checksum { 33-55}
__set%d test-ip4 7
__set%d test-ip4 0
	element 00000000  : 1 [end]	element 00002100  : 0 [end]	element 00003800  : 1 [end]
ip6 test-ip6 input
  [ payload load 1b @ network header + 6 => reg 1 ]
  [ cmp eq reg 1 0x00000088 ]
  [ payload load 2b @ transport header + 6 => reg 1 ]
  [ lookup reg 1 set __set%d ]

