# ct mark set 0x11 xor 0x1331
1
ip test-ip4 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
inet test-inet output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct label set 127
1
ip test-ip4 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
inet test-inet output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct zone set 1
1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 ]

# ct zone set 1
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 ]

# ct zone set 1
1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 ]

# ct original zone set 1
1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir original ]

# ct original zone set 1
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir original ]

# ct original zone set 1
1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir original ]

# ct reply zone set 1
1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir reply ]

# ct reply zone set 1
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir reply ]

# ct reply zone set 1
1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set zone with reg 1 , dir reply ]

# ct zone set mark map { 1 : 1,  2 : 2 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 00000001 0 [end]	element 00000002  : 00000002 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set zone with reg 1 ]

# ct zone set mark map { 1 : 1,  2 : 2 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 00000001 0 [end]	element 00000002  : 00000002 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set zone with reg 1 ]

# ct zone set mark map { 1 : 1,  2 : 2 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 00000001 0 [end]	element 00000002  : 00000002 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set zone with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip test-ip4 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
inet test-inet output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct label set 127
1
ip test-ip4 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
inet test-inet output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip test-ip4 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
inet test-inet output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip test-ip4 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
inet test-inet output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct label set 127
1
ip test-ip4 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct label set 127
1
inet test-inet output 
  [ immediate reg 1 0x00000000 0x00000000 0x00000000 0x80000000 ]
  [ ct set label with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip test-ip4 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11 xor 0x1331
1
inet test-inet output 
  [ immediate reg 1 0x00001320 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11333 and 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x12 or 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000013 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip test-ip4 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set 0x11
1
inet test-inet output 
  [ immediate reg 1 0x00000011 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark
1
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip4 b
__map%d test-ip4 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip test-ip4 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-ip6 b
__map%d test-ip6 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
ip6 test-ip6 output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct mark set mark map { 1 : 10, 2 : 20, 3 : 30 }
1
__map%d test-inet b
__map%d test-inet 0
	element 00000001  : 0000000a 0 [end]	element 00000002  : 00000014 0 [end]	element 00000003  : 0000001e 0 [end]
inet test-inet output 
  [ meta load mark => reg 1 ]
  [ lookup reg 1 set __map%d dreg 1 ]
  [ ct set mark with reg 1 ]

# ct eventmask set new
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set new
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set new
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
ip test-ip4 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
ip6 test-ip6 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
inet test-inet output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
ip test-ip4 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
inet test-inet output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set new
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set new
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set new
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
ip test-ip4 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
ip6 test-ip6 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 'new | related | destroy | label'
inet test-inet output 
  [ immediate reg 1 0x00000407 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
ip test-ip4 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct eventmask set 0x0
inet test-inet output 
  [ immediate reg 1 0x00000000 ]
  [ ct set unknown with reg 1 ]

# ct event set new
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set new
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set new
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set 'new | related | destroy | label'
ip test-ip4 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set eventmask with reg 1 ]

# ct event set 'new | related | destroy | label'
ip6 test-ip6 output 
  [ immediate reg 1 0x00000407 ]
  [ ct set eventmask with reg 1 ]

# ct event set 'new | related | destroy | label'
inet test-inet output 
  [ immediate reg 1 0x00000407 ]
  [ ct set eventmask with reg 1 ]

# ct event set new,destroy
ip test-ip4 output 
  [ immediate reg 1 0x00000005 ]
  [ ct set eventmask with reg 1 ]

# ct event set new,destroy
ip6 test-ip6 output 
  [ immediate reg 1 0x00000005 ]
  [ ct set eventmask with reg 1 ]

# ct event set new,destroy
inet test-inet output 
  [ immediate reg 1 0x00000005 ]
  [ ct set eventmask with reg 1 ]

# ct event set 1
ip test-ip4 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set 1
ip6 test-ip6 output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set 1
inet test-inet output 
  [ immediate reg 1 0x00000001 ]
  [ ct set eventmask with reg 1 ]

# ct event set 0x0
ip test-ip4 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set eventmask with reg 1 ]

# ct event set 0x0
ip6 test-ip6 output 
  [ immediate reg 1 0x00000000 ]
  [ ct set eventmask with reg 1 ]

# ct event set 0x0
inet test-inet output 
  [ immediate reg 1 0x00000000 ]
  [ ct set eventmask with reg 1 ]

